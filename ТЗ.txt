📘 Техническое задание на вакансию 
Стажёр backend-разработчик (Python / Node.js + LLM) 




* Вам нужно создать агента с 3 MCP-инструментами, памятью, базой знаний и Telegram-интерфейсом, все условия ниже.


🎯 Цель


Создать работающего интеллектуального агента, который общается через Telegram, использует три MCP-сервера, понимает контекст диалога, имеет векторную базу знаний и развёрнут на виртуальном сервере.
Весь код должен быть написан в Cursor, проект хранится на GitHub, агент работает на сервере под управлением Linux.




🧩 Основные требования:


 1. Назначение агента:
Разработчик сам выбирает цель — например, личный помощник, офис-бот, планировщик, HR-агент, исследователь и т.д.


 2. MCP-инструменты (3 шт. минимум):
Любые три бесплатных MCP-сервера, например:
 • Google Calendar, Gmail, Google Sheets
 • Web Search, Weather, Notion
 • Slack, Drive, GitHub
 • или другие, подходящие по теме проекта.


 3. Telegram-интерфейс:
 • Общение через Telegram-бота.
 • Команды /help и /health.
 • Ответы должны быть понятные и контекстные.


 4. Память:
Агент должен понимать весь контекст диалога в рамках сессии, а не только последние сообщения.
Память можно хранить локально (например, JSON, SQLite или Redis).


 5. Векторная база знаний:
Небольшая база для хранения фактов или документов (например, FAISS, Chroma или LlamaIndex).
Агент должен уметь искать в ней информацию и использовать результаты в ответах.


 6. Развёртывание:
 • Виртуальный сервер: Ubuntu 22.04+ или Debian 12+.
 • Запуск через Docker или systemd.
 • После перезапуска сервера агент должен автоматически стартовать.


 7. Разработка в Cursor:
 • Весь код пишется и правится внутри Cursor.
 • Проект подключён к GitHub.
 • Нужно сохранить и приложить историю общения с Cursor (экспорт или скриншоты чата).




📂 Что должно быть в GitHub-репозитории:


 • Исходный код агента.
 • README.md с инструкцией по установке и запуску.
 • docker-compose.yml или systemd unit.
 • Пример .env.example (без секретов).
 • Короткое описание используемых MCP-инструментов.
 • Папка conversations/ с логом общения с Cursor.
 • Короткий отчёт (назначение агента, какие MCP подключены, как реализована память и база знаний).




🧪 Проверка (что мы будем тестировать):


 1. Агент отвечает через Telegram и корректно работает команды /help, /health.
 2. Все 3 MCP-инструмента реально вызываются и возвращают результат.
 3. Агент понимает контекст всего диалога (помнит, о чём говорили раньше).
 4. Работает поиск по векторной базе знаний.
 5. Проект запускается на сервере и сохраняет работоспособность после перезагрузки.
 6. Репозиторий аккуратный, с понятным README и логом работы в Cursor.








Желаю вам вдохновения и удачи в выполнении задания! 😊
Руководитель Call Intellect
Сергей Мазур